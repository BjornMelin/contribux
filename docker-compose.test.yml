services:
  postgres:
    image: pgvector/pgvector:pg16
    container_name: contribux-test-db
    environment:
      POSTGRES_USER: testuser
      POSTGRES_PASSWORD: testpass
      POSTGRES_DB: testdb
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    ports:
      - "5432:5432"
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
      # Initialize database with extensions and schema
      - ./database/init:/docker-entrypoint-initdb.d
      # Add test-specific configurations
      - ./scripts/test-configs/postgresql.conf:/etc/postgresql/postgresql.conf
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U testuser -d testdb"]
      interval: 5s
      timeout: 5s
      retries: 5
    command: >
      postgres
      -c shared_preload_libraries=vector
      -c log_statement=all
      -c log_duration=on
      -c log_min_duration_statement=100
      -c max_connections=100
      -c shared_buffers=256MB
      -c effective_cache_size=1GB
      -c work_mem=4MB
      -c maintenance_work_mem=64MB

  redis:
    image: redis:7-alpine
    container_name: contribux-test-redis
    environment:
      REDIS_PASSWORD: test-redis-password-for-testing-only
    ports:
      - "6379:6379"
    volumes:
      - redis_test_data:/data
      - ./scripts/test-configs/redis.conf:/usr/local/etc/redis/redis.conf
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    command: redis-server /usr/local/etc/redis/redis.conf --requirepass test-redis-password-for-testing-only

  # PostgreSQL monitoring with pgAdmin (optional for debugging)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: contribux-test-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@contribux.test
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_test_data:/var/lib/pgadmin
    depends_on:
      postgres:
        condition: service_healthy
    profiles:
      - debug

  # Redis monitoring with RedisInsight (optional for debugging)
  redis-insight:
    image: redislabs/redisinsight:latest
    container_name: contribux-test-redis-insight
    ports:
      - "8001:8001"
    volumes:
      - redis_insight_data:/db
    depends_on:
      redis:
        condition: service_healthy
    profiles:
      - debug

  # Performance monitoring with Prometheus (optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: contribux-test-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./scripts/monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    profiles:
      - monitoring

  # Performance monitoring with Grafana (optional)
  grafana:
    image: grafana/grafana:latest
    container_name: contribux-test-grafana
    ports:
      - "3001:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./scripts/monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./scripts/monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    depends_on:
      - prometheus
    profiles:
      - monitoring

volumes:
  postgres_test_data:
    driver: local
  redis_test_data:
    driver: local
  pgadmin_test_data:
    driver: local
  redis_insight_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  default:
    name: contribux-test-network
    driver: bridge