name: Database Branch Management

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - closed

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  setup:
    name: Setup Branch Info
    outputs:
      branch: ${{ steps.branch_name.outputs.current_branch }}
    runs-on: ubuntu-latest
    steps:
      - name: Get branch name
        id: branch_name
        uses: tj-actions/branch-names@v8

  create_neon_branch:
    name: Create Neon Branch
    outputs:
      db_url: ${{ steps.create_neon_branch.outputs.db_url }}
      db_url_with_pooler: ${{ steps.create_neon_branch.outputs.db_url_with_pooler }}
    needs: setup
    if: |
      github.event_name == 'pull_request' && (
      github.event.action == 'synchronize'
      || github.event.action == 'opened'
      || github.event.action == 'reopened')
    runs-on: ubuntu-latest
    steps:
      - name: Create Neon Branch
        id: create_neon_branch
        uses: neondatabase/create-branch-action@v5
        with:
          project_id: ${{ vars.NEON_PROJECT_ID }}
          branch_name: preview/pr-${{ github.event.number }}-${{ needs.setup.outputs.branch }}
          api_key: ${{ secrets.NEON_API_KEY }}

  run_database_tests:
    name: Run Database Tests
    needs: [setup, create_neon_branch]
    if: |
      github.event_name == 'pull_request' && (
      github.event.action == 'synchronize'
      || github.event.action == 'opened'
      || github.event.action == 'reopened')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.12.4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run database migrations
        run: pnpm db:migrate
        env:
          DATABASE_URL: ${{ needs.create_neon_branch.outputs.db_url_with_pooler }}

      - name: Test database connection
        run: pnpm db:test-connection
        env:
          DATABASE_URL: ${{ needs.create_neon_branch.outputs.db_url_with_pooler }}

      - name: Run database health checks
        run: pnpm db:health
        env:
          DATABASE_URL: ${{ needs.create_neon_branch.outputs.db_url_with_pooler }}

      - name: Run vector metrics check
        run: pnpm db:vector-metrics
        env:
          DATABASE_URL: ${{ needs.create_neon_branch.outputs.db_url_with_pooler }}

      - name: Run type checking
        run: pnpm type-check

      - name: Run linting
        run: pnpm lint

      - name: Run unit tests
        run: pnpm test:unit
        env:
          DATABASE_URL: ${{ needs.create_neon_branch.outputs.db_url_with_pooler }}
          DATABASE_URL_TEST: ${{ needs.create_neon_branch.outputs.db_url_with_pooler }}

      - name: Run database tests
        run: pnpm test:db
        env:
          DATABASE_URL: ${{ needs.create_neon_branch.outputs.db_url_with_pooler }}
          DATABASE_URL_TEST: ${{ needs.create_neon_branch.outputs.db_url_with_pooler }}

      - name: Run integration tests
        run: pnpm test:integration:ci
        env:
          DATABASE_URL: ${{ needs.create_neon_branch.outputs.db_url_with_pooler }}
          DATABASE_URL_TEST: ${{ needs.create_neon_branch.outputs.db_url_with_pooler }}

      - name: Run security tests
        run: pnpm test:security
        env:
          DATABASE_URL: ${{ needs.create_neon_branch.outputs.db_url_with_pooler }}
          DATABASE_URL_TEST: ${{ needs.create_neon_branch.outputs.db_url_with_pooler }}

      - name: Build application
        run: pnpm build
        env:
          DATABASE_URL: ${{ needs.create_neon_branch.outputs.db_url_with_pooler }}

      - name: Post Schema Diff Comment to PR
        uses: neondatabase/schema-diff-action@v1
        with:
          project_id: ${{ vars.NEON_PROJECT_ID }}
          compare_branch: preview/pr-${{ github.event.number }}-${{ needs.setup.outputs.branch }}
          api_key: ${{ secrets.NEON_API_KEY }}

  delete_neon_branch:
    name: Delete Neon Branch
    needs: setup
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    steps:
      - name: Delete Neon Branch
        uses: neondatabase/delete-branch-action@v3
        with:
          project_id: ${{ vars.NEON_PROJECT_ID }}
          branch: preview/pr-${{ github.event.number }}-${{ needs.setup.outputs.branch }}
          api_key: ${{ secrets.NEON_API_KEY }}